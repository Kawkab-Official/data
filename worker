export default {
  async fetch(request, env) {
    if (request.method === "OPTIONS") {
      return new Response(null, {
        status: 200,
        headers: {
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "GET, POST, OPTIONS",
          "Access-Control-Allow-Headers": "Content-Type, Authorization",
        },
      });
    }

    try {
      const HF_TOKEN = env.HF_TOKEN;
      if (!HF_TOKEN) {
        return new Response(JSON.stringify({ error: "HF_TOKEN not configured" }), {
          status: 500,
          headers: { "Access-Control-Allow-Origin": "*", "Content-Type": "application/json" },
        });
      }

      // قراءة البدي (مرن)
      let body = {};
      try { body = await request.json(); } catch {
        const txt = (await request.text()).trim();
        if (txt) {
          try { body = JSON.parse(txt); } catch { body = { text: txt }; }
        }
      }

      const msgsIn = Array.isArray(body.messages) ? body.messages : [];
      const finalize = !!body.finalize;
      const percentOverride = Number.isFinite(Number(body.percent_override)) ? Number(body.percent_override) : null;

      // system prompt مُشدّد بالأسلوب المصري وقواعد الزيادة
      const systemPrompt = `
إنت اسمك "بوت كوكب"، شغال خدمة عملاء بتاعة ماركة كاجوال مصرية.
اتكلم بالعامية المصرية، بطريقة بسيطة وقريبة، فيها شوية هزار بس محترمة.
خليك مرن في الفصال: لو الزبون بيحاول يزود الخصم، امشيها بالحيلة، واسأله "هتطلب كام قطعة؟" أو "طب لو نقدي أظبطك أكتر؟".
الردود تكون قصيرة زي دردشة واتساب، جملتين بالكتير.
خلي أول سطر لو فيه عرض رسمي يكون: "عرض: X%"، وميبقاش أي رقم تاني عرض.
الحد الأقصى للخصم 30%.
لو الزبون قال "ماشي" أو "موافق" أو "تمام"، اعتبر الصفقة خلصت.
حاول تبين روح الدعابة من غير مبالغة.
`;


      const hfMessages = [{ role: "system", content: systemPrompt }];
      for (const m of msgsIn) {
        if (m && m.role && typeof m.content === "string") hfMessages.push({ role: m.role, content: m.content });
      }

      // finalize مع percent_override => نطلب تبرير للنسبة فقط
      if (finalize && percentOverride) {
        hfMessages.push({
          role: "system",
          content: `FINALIZE_JUSTIFY: برّر النسبة ${percentOverride}% في سطر واحد فقط. لا تذكر أي نسبة أخرى، ولا تغيّر الرقم، ولا تكتب كود.`
        });

        const hfRes = await fetch("https://router.huggingface.co/v1/chat/completions", {
          method: "POST",
          headers: {
            "Authorization": `Bearer ${HF_TOKEN}`,
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            model: "deepseek-ai/DeepSeek-V3.2-Exp:novita",
            messages: hfMessages,
            stream: false
          }),
        });

        const txt = await hfRes.text();
        let j = null;
        try { j = JSON.parse(txt); } catch(e){ /* ignore */ }

        if (!hfRes.ok) {
          return new Response(JSON.stringify({ error: "HF router error", details: j ?? txt }), {
            status: 502,
            headers: { "Access-Control-Allow-Origin": "*", "Content-Type": "application/json" },
          });
        }

        const assistantContent = j?.choices?.[0]?.message?.content ?? String(j ?? txt);
        return new Response(JSON.stringify({
          finalize: true,
          percent: percentOverride,
          reason: String(assistantContent).trim()
        }), {
          status: 200,
          headers: { "Access-Control-Allow-Origin": "*", "Content-Type": "application/json" },
        });
      }

      // تفاعل عادي: نبعث للموديل
      const hfRes = await fetch("https://router.huggingface.co/v1/chat/completions", {
        method: "POST",
        headers: {
          "Authorization": `Bearer ${HF_TOKEN}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          model: "deepseek-ai/DeepSeek-V3.2-Exp:novita",
          messages: hfMessages,
          stream: false
        }),
      });

      const txt = await hfRes.text();
      let j = null;
      try { j = JSON.parse(txt); } catch(e){ /* ignore */ }

      if (!hfRes.ok) {
        return new Response(JSON.stringify({ error: "HF router error", details: j ?? txt }), {
          status: 502,
          headers: { "Access-Control-Allow-Origin": "*", "Content-Type": "application/json" },
        });
      }

      const assistantContent = j?.choices?.[0]?.message?.content ?? String(j ?? txt);
      return new Response(JSON.stringify({ text: assistantContent, raw: j }), {
        status: 200,
        headers: { "Access-Control-Allow-Origin": "*", "Content-Type": "application/json" },
      });

    } catch (err) {
      return new Response(JSON.stringify({ error: err.message }), {
        status: 500,
        headers: { "Access-Control-Allow-Origin": "*", "Content-Type": "application/json" },
      });
    }
  }
};
